序列1的问题：
（1）不正确的隔离等级
    如用户在存款过程中两次查询账户余额，但两次读取间另一位用户提交了自己的转账，而存款实际上失败但还未报错，第二次用户查询看到账户余额后以为存款已经成功，实际上账户余额的变化却是另一位用户的转账造成的，会造成问题。当前事务隔离等级都是READ COMMITED，不是安全等级，应该设置为SERIALIZABLE。
（2）确认信息位置不正确
    如用户可能在事务没有结束前就收到了操作完成的确认信息，然而事务发生回滚的话，事务会被撤销，然而用户却以为已经执行成功。故会产生错误，所以所有的确认信息必须在事务成功提交后进行显示。
（3）不正确的事务边界
    如用户既要进行转账又要进行取款，然而都是在同一事务边界内，这破坏了事务的原子性和独立性。故事务边界应该更小。
（4）在事务边界内等待用户输入
    如用户一直没有输入则会导致该事务一直不解除当前占用的锁，会导致其他申请锁的事务受到不必要的滞后。所以，应该在事务边界、事务不占用锁时等待用户输入。

2)Scenario B 做的改变
    确认信息的显示位置被移至事务成功提交后；
    事务边界缩小为一次转账、一次存款等各自为一次事务；
    等待用户输入的位置改为在事务边界、事务不占用锁时。

b)Scenario C 做的改变
    事务隔离等级改为SERIALIZABLE安全等级。

最终正确的顺序：
William                              | Julie
ATM机等待用户操作                    | ATM机等待用户操作
William向定期储蓄账户存款            | Julie向活期储蓄账户存款
一、开始事务（隔离等级SERIALIZABLE） | 二、开始事务（隔离等级SERIALIZABLE）
ATM机等待用户输入                    | ATM机等待用户输入
William输入400                       | Julie输入500
三、查询定期储蓄账户余额             | 四、查询活期储蓄账户余额
定期储蓄账户加$400                   | 活期储蓄账户加$500
五、更新定期储蓄账户                 | 六、更新活期储蓄账户
七、结束事务                         | 八、结束事务
ATM机显示确认存款成功                | ATM机显示确认存款成功
ATM机等待用户操作                    | ATM机等待用户操作
William选择从活期账户向定期账户转账  | Julie选择从定期账户取款
九、开始事务（隔离等级SERIALIZABLE） | 十、开始事务（隔离等级SERIALIZABLE）
ATM机等待用户输入                    | ATM机等待用户输入
William输入300                       | Julie输入100
十一、查询活期储蓄账户余额           | 十二、查询定期储蓄账户余额
活期储蓄账户减$300                   | 定期储蓄账户减$100
十三、查询定期储蓄账户余额           | 十四、更新定期储蓄账户余额
定期储蓄账户加$300                   | 十五、 结束事务
十六、更新定期账户余额               | ATM机显示确认取款成功
十七、更新活期账户余额               | ATM机等待用户操作
十八、结束事务                       | Julie选择不再操作
ATM机显示确认转账成功
ATM机等待用户操作
William选择不再操作
