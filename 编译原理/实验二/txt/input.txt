################################################ 1 功能1 样例1 报错 同一个struct空间下 不能有同名变量
struct A{
    short num;
    long num;
};
################################################ 2 功能1 样例2 通过 同一个module下 不同的struct可以有同名变量
module  space{
    struct A{
        short a;
    };
    struct B{
        short a;
    };
};
################################################ 3 功能1 样例3 报错 同一个module下 不能出现同名的struct
module  space{
    struct A{
        short a;
    };
    struct A{
        short a;
    };
};
################################################ 4 功能1 扩展 报错 检查全局下的重名struct
struct a;
struct b;
struct b;
################################################ 5 功能1 扩展 报错 检查全局下的重名module
module a{
    struct b{};
};
module a{
    struct b{};
};
################################################ 6 功能1 扩展 报错 检查同一module下的重名module
module a{
    module b{
        struct c{};
    };
    module b{
        struct d{};
    };
};
################################################ 7 功能1 扩展 报错 检查同一member_list中的对象重名报错
module a{
    struct b{
        uint8 c, c;
    };
};
################################################ 8 功能1 扩展 报错 同一struct内不同类型对象重名报错
module a{
    struct b{
        uint8 e;
        string e;
    };
};
################################################ 9 功能1 扩展 报错 同一struct内与struct类型对象重名报错
module a{
    struct A{};
    struct b{
        uint8 e;
        A e;
    };
};
################################################ 10 功能2 样例1 报错 B结构应该先定义才能引用类型
struct A{
    short a;
    B b;
};
################################################ 11 功能2 样例2 报错 虽然B结构定义了 但是命名空间的引用不对 应该是 space1::B
module space1{
    struct B{};
};
module space2{
    struct A{
        short a;
        B b;
    };
};
################################################ 12 功能2 扩展 报错 int不在普通类型中 这里视为type_spec 但int未定义
module a{
    struct b{
        int d;
    };
};
################################################ 13 功能2 扩展 通过 检查对另一个module中声明的type_spec对象的声明
module a{
    struct B{};
};
module a1{
    struct C{
        a::B b;
        ::a::B c;
    };
};
################################################ 14 功能2 扩展 通过 检查对另一个多层module多层struct中声明的type_spec对象的声明
module A{
    module B{
        struct C{
            struct D{}i1;
        };
    };
};
module a1{
    struct C{
        A::B::C::D b;
        ::A::B::C::D c;
    };
};
################################################ 15 功能3 样例1 报错 a是整型变量 字面量却是字符类型
struct A{
    short a='a';
};
################################################ 16 功能3 样例2 报错 short为有符号短整型 最大值不超过 2^15-1
struct A{
    short a=100000;
};
################################################ 17 功能3 样例3 报错 a是整型变量 字面量却是浮点类型
struct A{
    short a=15.24;
};
################################################ 18 功能3 样例4 报错 a是整型变量 a是整型数组 数组字面量里必须保证数据类型的统一
struct A{
    short a[4]=[10,12,45.34,'a'];
};
################################################ 19 功能3 样例4 报错 对结构体对象 不允许进行赋值操作
struct A{};
struct B{
    A a = 7;
};
################################################ 20 功能3 样例4 报错 数组对象的长度声明只能是整型
struct B{
    short a[2*3.14];
};
################################################ 21 功能3 样例4 报错 数组对象的长度声明应在short范围内
struct B{
    short a[99999999];
};
################################################ 22 功能3 样例4 报错 普通类型的对象赋值字面量须在对应范围内
struct B{
    float f = 100000000000000000000000;
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 23 case1
module space{
	struct A{
		short i1=10;
	};
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 24 case2
module space{
	struct A{
		short i1=10;
	};
	struct B{
		long i2=100;
		A i3;
	};
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 25 case3
struct A{
	short i1=10;
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 26 case4
module space{
	module inner{
		struct A{
			short i1=10;
		};
	};
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 27 case5
module space{
	struct A{
		short i1=10;
		int16 i2=10;
		long i3=100;
		int32 i4=100;
		long long i5=1000;
		int64 i6=1000;
		unsigned short i7=10;
		uint16 i8=10;
		unsigned long i9=100;
		uint32 i10=100;
		unsigned long long i11=1000;
		uint64 i12=1000;
		char c0='a';
		string c1="abc";
		boolean c2=true;
		float c3=10.901f;
		double c4=23.234d;
		long double c5=12.23456432235d;
		short arr[10]=[0,1,2,3,4,5,6,7,8,9];
	};
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 28 hxx case1扩展用例
module a{
    struct b{
        uint16 c = 17;
        uint32 d = 18;
    };
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 29 case2扩展用例
module space{
	struct A{
		short i1=10;
		float f1=12.5;
	};
	struct B{
		long i2=100;
		A i3;
	};
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 30 case5扩展用例 多个并列struct
struct A{
    uint32 i1=1;
};
struct B{
    float i1=3.14;
};
struct C{
    string i1="hello";
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 31 case5扩展用例 有string数组
struct A{
    string s[9]=["hello"];
};
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
