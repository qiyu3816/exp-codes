specification( struct$A( member$0( signed_int$short( num )  ) member$1( signed_int$long( num )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( a )  )  ) struct$B( member$1( signed_int$short( a )  )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( a )  )  ) struct$A( member$1( signed_int$short( a )  )  )  )  ) 
specification( struct$a(  ) struct$b(  ) struct$b(  )  ) 
specification( module$a( struct$b(  )  ) module$a( struct$b(  )  )  ) 
specification( module$a( module$b( struct$c(  )  ) module$b( struct$d(  )  )  )  ) 
specification( module$a( struct$b( member$0( unsigned_int$uint8( c ) unsigned_int$uint8( c )  )  )  )  ) 
specification( module$a( struct$b( member$0( unsigned_int$uint8( e )  ) member$1( base_type_spec$string( e )  )  )  )  ) 
specification( module$a( struct$A(  ) struct$b( member$0( unsigned_int$uint8( e )  ) member$1( scoped_name$A( e )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( a )  ) member$1( scoped_name$B( b )  )  )  ) 
specification( module$space1( struct$B(  )  ) module$space2( struct$A( member$0( signed_int$short( a )  ) member$1( scoped_name$B( b )  )  )  )  ) 
specification( module$a( struct$b( member$0( scoped_name$int( d )  )  )  )  ) 
specification( module$a( struct$B(  )  ) module$a1( struct$C( member$0( scoped_name$a::B( b )  ) member$1( scoped_name$::a::B( c )  )  )  )  ) 
specification( module$A( module$B( struct$C( member$0( struct$D(  ) ( i1 )  )  )  )  ) module$a1( struct$C( member$1( scoped_name$A::B::C::D( b )  ) member$2( scoped_name$::A::B::C::D( c )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( assign( a literal$'a'  )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( assign( a literal$100000  )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( assign( a literal$15.24  )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( array_declarator$a( literal$4 assignArray( literal$10 literal$12 literal$45.34 literal$'a'  )  )  )  )  )  ) 
specification( struct$A(  ) struct$B( member$0( scoped_name$A( assign( a literal$7  )  )  )  )  ) 
specification( struct$B( member$0( signed_int$short( array_declarator$a( *( literal$2  literal$3.14  )  )  )  )  )  ) 
specification( struct$B( member$0( signed_int$short( array_declarator$a( literal$99999999  )  )  )  )  ) 
specification( struct$B( member$0( floating_pt_type$float( assign( f literal$100000000000000000000000  )  )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  )  ) struct$B( member$1( signed_int$long( assign( i2 literal$100  )  )  ) member$2( scoped_name$A( i3 )  )  )  )  ) 
specification( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  )  )  ) 
specification( module$space( module$inner( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  )  )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  ) member$1( signed_int$int16( assign( i2 literal$10  )  )  ) member$2( signed_int$long( assign( i3 literal$100  )  )  ) member$3( signed_int$int32( assign( i4 literal$100  )  )  ) member$4( signed_int$longlong( assign( i5 literal$1000  )  )  ) member$5( signed_int$int64( assign( i6 literal$1000  )  )  ) member$6( unsigned_int$unsignedshort( assign( i7 literal$10  )  )  ) member$7( unsigned_int$uint16( assign( i8 literal$10  )  )  ) member$8( unsigned_int$unsignedlong( assign( i9 literal$100  )  )  ) member$9( unsigned_int$uint32( assign( i10 literal$100  )  )  ) member$10( unsigned_int$unsignedlonglong( assign( i11 literal$1000  )  )  ) member$11( unsigned_int$uint64( assign( i12 literal$1000  )  )  ) member$12( base_type_spec$char( assign( c0 literal$'a'  )  )  ) member$13( base_type_spec$string( assign( c1 literal$"abc"  )  )  ) member$14( base_type_spec$boolean( assign( c2 literal$true  )  )  ) member$15( floating_pt_type$float( assign( c3 literal$10.901f  )  )  ) member$16( floating_pt_type$double( assign( c4 literal$23.234d  )  )  ) member$17( floating_pt_type$longdouble( assign( c5 literal$12.23456432235d  )  )  ) member$18( signed_int$short( array_declarator$arr( literal$10 assignArray( literal$0 literal$1 literal$2 literal$3 literal$4 literal$5 literal$6 literal$7 literal$8 literal$9  )  )  )  )  )  )  ) 
specification( module$a( struct$b( member$0( unsigned_int$uint16( assign( c literal$17  )  )  ) member$1( unsigned_int$uint32( assign( d literal$18  )  )  )  )  )  ) 
specification( module$space( struct$A( member$0( signed_int$short( assign( i1 literal$10  )  )  ) member$1( floating_pt_type$float( assign( f1 literal$12.5  )  )  )  ) struct$B( member$2( signed_int$long( assign( i2 literal$100  )  )  ) member$3( scoped_name$A( i3 )  )  )  )  ) 
specification( struct$A( member$0( unsigned_int$uint32( assign( i1 literal$1  )  )  )  ) struct$B( member$1( floating_pt_type$float( assign( i1 literal$3.14  )  )  )  ) struct$C( member$2( base_type_spec$string( assign( i1 literal$"hello"  )  )  )  )  ) 
specification( struct$A( member$0( base_type_spec$string( array_declarator$s( literal$9 assignArray( literal$"hello"  )  )  )  )  )  ) 
